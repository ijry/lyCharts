const t=new class{constructor(){this.defaultColors=["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]}calculateDataRange(t){let e=Number.MAX_VALUE,a=Number.MIN_VALUE;if(!t||!Array.isArray(t))return{minY:0,maxY:1};let o=!1;if(t.forEach(t=>{t&&("line"===t.type||"bar"===t.type)&&t.data&&Array.isArray(t.data)&&t.data.forEach(t=>{const n="object"==typeof t&&null!==t?t.value:t;"number"!=typeof n||isNaN(n)||(n<e&&(e=n),n>a&&(a=n),o=!0)})}),!o)return{minY:0,maxY:1};const n=a-e;if(0===n)e-=1,a+=1;else{const t=.1*n;e-=t,a+=t}return{minY:e,maxY:a}}processXAxisData(t,e){let a=[];return t&&t.data&&Array.isArray(t.data)?a=t.data:e&&e.length>0&&e[0].data&&Array.isArray(e[0].data)&&(a=e[0].data.map((t,e)=>e)),a}calculateYAxisTicks(t,e,a=5){if(t===e){if(0===t)return{min:0,max:4,step:1,tickCount:4};{const a=.1*Math.abs(t)||1;return{min:t-a,max:e+a,step:2*a/4,tickCount:4}}}const o=(e-t)/a,n=Math.pow(10,Math.floor(Math.log10(o))),i=[1,2,5,10];let s=i[0]*n;for(const c of i){const t=c*n;if(t>=o){s=t;break}}const l=Math.floor(t/s)*s,r=Math.ceil(e/s)*s,f=Math.round((r-l)/s);return 0===f?{min:t,max:e+1,step:1,tickCount:1}:{min:l,max:r,step:s,tickCount:f}}drawGrid(t,e,a,o,n,i,s,l=!0,r=0){if(!t||!e)return;const f=a-(e.left||0)-(e.right||0),c=o-(e.top||0)-(e.bottom||0);if(f<=0||c<=0)return;t.strokeStyle="#eee",t.lineWidth=1;const h=this.calculateYAxisTicks(i,s,5);for(let x=0;x<=h.tickCount;x++){const a=(h.min+x*h.step-h.min)/(h.max-h.min),o=(e.top||0)+c-a*c;t.beginPath(),t.moveTo(e.left||0,o),t.lineTo((e.left||0)+f,o),t.stroke()}if(l&&n>0)for(let x=0;x<n;x++){const a=(e.left||0)+r+x/(n-1)*(f-2*r);t.beginPath(),t.moveTo(a,e.top||0),t.lineTo(a,(e.top||0)+c),t.stroke()}}drawAxis(t,e,a,o,n,i,s,l,r,f="line",c=0){if(!t||!e)return;const h=a-(e.left||0)-(e.right||0),x=o-(e.top||0)-(e.bottom||0);if(h<=0||x<=0)return;t.strokeStyle="#ccc",t.lineWidth=1;const d=l.axisLine&&l.axisLine.show;(void 0===d||d)&&(t.beginPath(),t.moveTo(e.left||0,o-(e.bottom||0)),t.lineTo((e.left||0)+h,o-(e.bottom||0)),t.stroke());const m=r.axisLine&&r.axisLine.show;void 0!==m&&m&&(t.beginPath(),t.moveTo(e.left||0,e.top||0),t.lineTo(e.left||0,o-(e.bottom||0)),t.stroke());const u=l.axisLabel&&l.axisLabel.show;if(void 0===u||u){const a=l&&l.axisLabel&&l.axisLabel.color||"#666",i=l&&l.axisLabel&&l.axisLabel.fontSize||12;t.fillStyle=a,t.font=`${i}px sans-serif`,t.textAlign="center",t.textBaseline="top",n&&Array.isArray(n)&&n.length>0&&("bar"===f?this.drawBarXAxisLabels(t,n,e,h,o,i,c):n.length<=5?n.forEach((a,i)=>{const s=(e.left||0)+c+i/Math.max(n.length-1,1)*(h-2*c);t.fillText(String(a),s,o-(e.bottom||0)+10)}):this.drawXAxisLabels(t,n,e,h,o,i,c))}const p=this.calculateYAxisTicks(i,s,5);this.adjustedYMin=p.min,this.adjustedYMax=p.max;const g=r.axisLabel&&r.axisLabel.show;if(void 0!==g&&g){const a=r&&r.axisLabel&&r.axisLabel.color||"#666";t.fillStyle=a,t.textAlign="right",t.textBaseline="middle";for(let o=0;o<=p.tickCount;o++){const a=p.min+o*p.step,n=(a-p.min)/(p.max-p.min),i=(e.top||0)+x-n*x;t.fillText(Math.round(a).toString(),(e.left||0)-10,i)}}}drawBarXAxisLabels(t,e,a,o,n,i,s=0){const l=e.length;l<=0||e.forEach((e,i)=>{const r=(a.left||0)+s+(i+.5)/l*(o-2*s);t.fillText(String(e),r,n-(a.bottom||0)+10)})}drawXAxisLabels(t,e,a,o,n,i,s=0){const l=e.length;let r=0;e.forEach(t=>{r+=String(t).length});const f=r/l,c=Math.ceil(f*i*.6+10),h=Math.max(Math.min(l,Math.floor((o-2*s)/c)),2),x=[];if(l>0&&(x.push(0),l>1&&x.push(l-1)),h>=3&&l>2){const t=Math.min(h-2,l-2);if(t>0){const e=(l-1)/(t+1);for(let a=1;a<=t;a++){const t=Math.round(a*e);t>0&&t<l-1&&!x.includes(t)&&x.push(t)}}}x.sort((t,e)=>t-e),x.forEach(i=>{if(i>=0&&i<l){const r=(a.left||0)+s+i/Math.max(l-1,1)*(o-2*s),f=void 0!==e[i]?e[i]:i;t.fillText(String(f),r,n-(a.bottom||0)+10)}})}drawTitle(t,e,a){if(!t||!e||!e.text)return 0;const o=e.textStyle&&e.textStyle.fontSize||16,n=e.textStyle&&e.textStyle.fontFamily||"sans-serif",i=e.textStyle&&e.textStyle.color||"#333";t.font=`${o}px ${n}`,t.fillStyle=i,t.textAlign="center",t.textBaseline="top";const s=(a||0)/2;return t.fillText(e.text,s,10),o+20}drawLegend(t,e,a,o,n,i,s=0){if(!(t&&e&&e.data&&Array.isArray(e.data)&&0!==e.data.length))return 0;const l=e.top,r=e.bottom,f=e.left,c=e.right,h=void 0!==l&&"auto"!==l,x=void 0!==r&&"auto"!==r,d=void 0!==f&&"auto"!==f,m=void 0!==c&&"auto"!==c,u=!h&&!x,p=20;let g=Math.min(4,e.data.length);const b=(o||300)-(a.left||0)-20;let y=0,M=0;for(let k=0;k<e.data.length;k++){const a=e.data[k];t.font="12px sans-serif";const o=25+t.measureText(a).width+8;if(y+o>b&&M>0){g=M;break}y+=o,M++}g=Math.max(1,Math.min(4,g));const A=Math.ceil(e.data.length/g),T=14*A+8*Math.max(0,A-1)+8;let S,L=T;if(h){let t=0;"number"==typeof l?t=l:"string"==typeof l&&l.endsWith("%")&&(t=parseInt(l)/100*i),S=t+s,L=T+t+5,void 0!==a.top&&(a.top=Math.max(a.top,S+T+15))}else if(x||u){let t=0;"number"==typeof r?t=r:"string"==typeof r&&r.endsWith("%")?t=parseInt(r)/100*i:u&&(t=5),S=i-T-t,L=T+t+10,void 0!==a.bottom&&(a.bottom+=L)}else S=(a.top||0)-18+s,L=T+18+5,void 0!==a.top&&(a.top=Math.max(a.top,S+T+5));let w=a.left||0;if(d){if("number"==typeof f)w=f;else if("string"==typeof f&&f.endsWith("%"))w=parseInt(f)/100*o;else if("center"===f){let a=0;for(let o=0;o<A;o++){let n=0;const i=o*g,s=Math.min(i+g,e.data.length);for(let a=i;a<s;a++){const o=e.data[a];t.font="12px sans-serif";n+=25+t.measureText(o).width+8}a=Math.max(a,n)}w=(o-a)/2}else if("right"===f){let n=0;for(let a=0;a<A;a++){let o=0;const i=a*g,s=Math.min(i+g,e.data.length);for(let a=i;a<s;a++){const n=e.data[a];t.font="12px sans-serif";o+=25+t.measureText(n).width+8}n=Math.max(n,o)}w=o-n-(a.right||0)}}else if(m){let a=0;for(let o=0;o<A;o++){let n=0;const i=o*g,s=Math.min(i+g,e.data.length);for(let a=i;a<s;a++){const o=e.data[a];t.font="12px sans-serif";n+=25+t.measureText(o).width+8}a=Math.max(a,n)}"number"==typeof c?w=o-a-c:"string"==typeof c&&c.endsWith("%")&&(w=o-a-parseInt(c)/100*o)}t.font="12px sans-serif",t.textAlign="left",t.textBaseline="middle";for(let k=0;k<e.data.length;k++){const a=e.data[k],i=n[k%n.length],s=Math.floor(k/g),l=k%g;let r=0;const c=s*g,h=Math.min(c+g,e.data.length);for(let o=c;o<h;o++){const a=e.data[o];r+=25+t.measureText(a).width+8}let x=w;d&&"center"===f?x=w+(o-2*w-r)/2:d&&"right"===f&&(x=w+(o-2*w)-r);let m=0;for(let o=c;o<c+l;o++){const a=e.data[o];m+=25+t.measureText(a).width+8}const u=x+m,b=S+4+22*s+7;t.beginPath(),t.strokeStyle=i,t.lineWidth=2,t.moveTo(u,b),t.lineTo(u+p,b),t.stroke();const y=e.textStyle&&e.textStyle.color||"#666";t.fillStyle=y,t.fillText(String(a),u+p+5,b)}return L}getColor(t){return this.defaultColors[t%this.defaultColors.length]}screenToDataCoords(t,e,a,o,n,i,s,l){if(!a||!i)return{dataX:0,dataY:0};const r=o-(a.left||0)-(a.right||0),f=n-(a.top||0)-(a.bottom||0),c=t-(a.left||0),h=e-(a.top||0);return{dataX:c/(r||1)*((i.length||1)-1),dataY:(l||1)-h/(f||1)*((l||1)-(s||0))}}dataToScreenCoords(t,e,a,o,n,i,s,l){if(!a||!i)return{x:0,y:0};const r=o-(a.left||0)-(a.right||0),f=n-(a.top||0)-(a.bottom||0);return{x:(a.left||0)+t/Math.max((i.length||1)-1,1)*r,y:(a.top||0)+f-((e||0)-(s||0))/Math.max((l||1)-(s||0),1)*f}}};export{t as c};
